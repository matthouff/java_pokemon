CREATE TABLE roles (
  id SERIAL PRIMARY KEY,
  libelle VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  lastname VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT now(), -- Automatically set to current timestamp on creation
  updated_at TIMESTAMP DEFAULT now(), -- Automatically set to current timestamp on update
  active boolean NOT NULL,
  role_id INTEGER REFERENCES roles(id) -- Foreign key referencing the role table
);

CREATE TABLE pokemon (
    id BIGINT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    hp INT NOT NULL,
    cp INT NOT NULL,
    picture VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

CREATE TABLE type (
    id INT PRIMARY KEY,
    name VARCHAR(20) NOT NULL,
    color VARCHAR(7) NOT NULL
);

CREATE TABLE pokemon_type (
    pokemon_id BIGINT NOT NULL,
    type_id SERIAL NOT NULL,
    PRIMARY KEY (pokemon_id, type_id),
    CONSTRAINT fk_pokemon_type FOREIGN KEY (pokemon_id) REFERENCES pokemon(id),
    CONSTRAINT fk_type_pokemon FOREIGN KEY (type_id) REFERENCES type(id)
);

CREATE TABLE IF NOT EXISTS jwt
(
    id integer NOT NULL DEFAULT nextval('jwt_id_seq'::regclass),
    desactive boolean NOT NULL,
    expire boolean NOT NULL,
    value character varying(255) COLLATE pg_catalog."default",
    user_id bigint,
    CONSTRAINT jwt_pkey PRIMARY KEY (id),
    CONSTRAINT fk_user FOREIGN KEY (user_id)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)